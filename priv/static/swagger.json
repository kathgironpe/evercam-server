{
  "swagger": "2.0",
  "paths": {
    "/cameras/{id}/ptz/home": {
      "post": {
        "tags": [
          "Onvif"
        ],
        "summary": "Returns PTZ home of the given camera.",
        "responses": {
          "401": {
            "description": "Invalid API keys"
          },
          "201": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.ONVIFPTZController.home",
        "description": ""
      }
    },
    "/cameras/{id}/ptz/relative": {
      "post": {
        "tags": [
          "Onvif"
        ],
        "summary": "Relative move of the camera.",
        "responses": {
          "401": {
            "description": "Invalid API keys"
          },
          "201": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "integer",
            "required": false,
            "name": "left",
            "in": "query",
            "description": "Left move, for example 4"
          },
          {
            "type": "integer",
            "required": false,
            "name": "right",
            "in": "query",
            "description": "Right move, for example 4"
          },
          {
            "type": "integer",
            "required": false,
            "name": "up",
            "in": "query",
            "description": "Up move, for example 4"
          },
          {
            "type": "integer",
            "required": false,
            "name": "down",
            "in": "query",
            "description": "Down move, for example 4"
          },
          {
            "type": "integer",
            "required": false,
            "name": "zoom",
            "in": "query",
            "description": "Zoom, for example 1"
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.ONVIFPTZController.relativemove",
        "description": ""
      }
    },
    "/cameras/{id}/recordings/snapshots/oldest": {
      "get": {
        "tags": [
          "Recordings"
        ],
        "summary": "Returns the oldest snapshot image in base64 format.",
        "responses": {
          "404": {
            "description": "Camera does not respond with a base64 image "
          },
          "403": {
            "description": "Forbidden camera access"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the camera."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapshotController.oldest",
        "description": ""
      }
    },
    "/cameras/{id}/recordings/snapshots/{year}/{month}/{day}/hours": {
      "get": {
        "tags": [
          "Recordings"
        ],
        "summary": "Returns all recorded hours in a day.",
        "responses": {
          "404": {
            "description": "Camera does not exist"
          },
          "403": {
            "description": "Forbidden camera access"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "year",
            "in": "path",
            "description": "Year, for example 2013"
          },
          {
            "type": "string",
            "required": true,
            "name": "month",
            "in": "path",
            "description": "Month, for example 12"
          },
          {
            "type": "string",
            "required": true,
            "name": "day",
            "in": "path",
            "description": "Day, for example 16"
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapshotController.hours",
        "description": ""
      }
    },
    "/cameras/{id}/ptz/presets/create": {
      "post": {
        "tags": [
          "Onvif"
        ],
        "summary": "Create new ptz preset of given camera.",
        "responses": {
          "401": {
            "description": "Invalid API keys"
          },
          "201": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": false,
            "name": "preset_name",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.ONVIFPTZController.createpreset",
        "description": ""
      }
    },
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "User signup.",
        "responses": {
          "400": {
            "description": "Invalid token | email or password has already been taken"
          },
          "201": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "firstname",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": true,
            "name": "lastname",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": true,
            "name": "username",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "telegram_username",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": true,
            "name": "email",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": true,
            "name": "password",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": true,
            "name": "token",
            "in": "query",
            "description": "Please use your token according to your platform (WEB, IOS, ANDROID)"
          }
        ],
        "operationId": "EvercamMediaWeb.UserController.create",
        "description": ""
      }
    },
    "/cameras/{id}/ptz/presets/{preset_token}/set": {
      "post": {
        "tags": [
          "Onvif"
        ],
        "summary": "Set the view of the camera to given preset.",
        "responses": {
          "401": {
            "description": "Invalid API keys"
          },
          "201": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "integer",
            "required": true,
            "name": "preset_token",
            "in": "path",
            "description": "Unique token number of the preset."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.ONVIFPTZController.setpreset",
        "description": ""
      }
    },
    "/models/{id}": {
      "get": {
        "tags": [
          "Models"
        ],
        "summary": "Returns available information for the specified model.",
        "responses": {
          "404": {
            "description": "Not found"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "The ID of the model being requested."
          }
        ],
        "operationId": "EvercamMediaWeb.VendorModelController.show",
        "description": ""
      }
    },
    "/cameras/{id}/archives/{archive_id}/thumbnail": {
      "get": {
        "tags": [
          "Archives"
        ],
        "summary": "Returns the jpeg thumbnail of given archive.",
        "responses": {
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "archive_id",
            "in": "path",
            "description": "Unique identifier for archive."
          },
          {
            "type": "string",
            "required": true,
            "name": "type",
            "in": "query",
            "enum": [
              "clip",
              "compare",
              "others"
            ],
            "description": "Media type of archive."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.ArchiveController.thumbnail",
        "description": ""
      }
    },
    "/cameras/{id}/ptz/status": {
      "get": {
        "tags": [
          "Onvif"
        ],
        "summary": "Returns ptz status of the given camera.",
        "responses": {
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.ONVIFPTZController.status",
        "description": ""
      }
    },
    "/cameras/{id}": {
      "put": {
        "tags": [
          "Cameras"
        ],
        "summary": "Change the ownership of the camera.",
        "responses": {
          "404": {
            "description": "Camera does not exist or Unauthorized"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "The ID of the camera being requested."
          },
          {
            "type": "string",
            "required": true,
            "name": "user_id",
            "in": "query",
            "description": "The username of the new owner"
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.CameraController.transfer",
        "description": ""
      },
      "patch": {
        "tags": [
          "Cameras"
        ],
        "summary": "Update the camera owned by the authenticating user.",
        "responses": {
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "The ID of the camera being requested."
          },
          {
            "type": "string",
            "required": false,
            "name": "name",
            "in": "query",
            "description": "Name of the camera."
          },
          {
            "type": "integer",
            "required": false,
            "name": "external_http_port",
            "in": "query",
            "description": "External HTTP Port, for example 8080"
          },
          {
            "type": "string",
            "required": false,
            "name": "external_rtsp_port",
            "in": "query",
            "description": "Internal RTSP Port, for example 880."
          },
          {
            "type": "string",
            "required": false,
            "name": "vendor",
            "in": "query",
            "description": "Vendor name, for example hikvision"
          },
          {
            "type": "string",
            "required": false,
            "name": "model",
            "in": "query",
            "description": "Model name of the camera being requested"
          },
          {
            "type": "string",
            "required": false,
            "name": "timezone",
            "in": "query",
            "description": "Timezone, for example \"Europe/Dublin\""
          },
          {
            "type": "string",
            "required": false,
            "name": "mac_address",
            "in": "query",
            "description": "Mac address of the camera being requested"
          },
          {
            "type": "boolean",
            "required": false,
            "name": "is_online",
            "in": "query",
            "description": ""
          },
          {
            "type": "boolean",
            "required": false,
            "name": "discoverable",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "location_lng",
            "in": "query",
            "description": "Longitude, for example 31.422117"
          },
          {
            "type": "string",
            "required": false,
            "name": "location_lat",
            "in": "query",
            "description": "Latitude, for example 73.090051"
          },
          {
            "type": "boolean",
            "required": false,
            "name": "is_public",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "secondary_port",
            "in": "query",
            "description": "Secondary port of the camera being requested"
          },
          {
            "type": "string",
            "required": false,
            "name": "nvr_http_port",
            "in": "query",
            "description": "HTTP port of NVR."
          },
          {
            "type": "string",
            "required": false,
            "name": "nvr_rtsp_port",
            "in": "query",
            "description": "RTSP port of NVR."
          },
          {
            "type": "string",
            "required": false,
            "name": "internal_host",
            "in": "query",
            "description": "Internal IP or URL."
          },
          {
            "type": "string",
            "required": false,
            "name": "internal_http_port",
            "in": "query",
            "description": "Internal HTTP Port, for example 80."
          },
          {
            "type": "string",
            "required": false,
            "name": "internal_rtsp_port",
            "in": "query",
            "description": "Internal RTSP Port, for example 980."
          },
          {
            "type": "string",
            "required": false,
            "name": "cam_username",
            "in": "query",
            "description": "Username of the camera being requested."
          },
          {
            "type": "string",
            "required": false,
            "name": "cam_password",
            "in": "query",
            "description": "Password of the camera being requested."
          },
          {
            "type": "string",
            "required": true,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": true,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.CameraController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "Cameras"
        ],
        "summary": "Returns the camera details.",
        "responses": {
          "404": {
            "description": "Camera not found"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "The ID of the camera being requested."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.CameraController.show",
        "description": ""
      },
      "delete": {
        "tags": [
          "Cameras"
        ],
        "summary": "Deletes a camera from Evercam along with any stored media.",
        "responses": {
          "404": {
            "description": "Camera does not exist or Unauthorized"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "The ID of the camera being requested."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.CameraController.delete",
        "description": ""
      }
    },
    "/users/{id}/credentials": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns API credentials of given user.",
        "responses": {
          "404": {
            "description": "User does not exit"
          },
          "400": {
            "description": "Invalid password"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Username/email of the user being requested."
          },
          {
            "type": "string",
            "required": true,
            "name": "password",
            "in": "query",
            "description": ""
          }
        ],
        "operationId": "EvercamMediaWeb.UserController.credentials",
        "description": ""
      }
    },
    "/cameras/test": {
      "post": {
        "tags": [
          "Cameras"
        ],
        "summary": "Test the given camera.",
        "responses": {
          "504": {
            "description": "Camera does not respond with a jpeg"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "camera_exid",
            "in": "query",
            "description": "The ID of the camera being tested."
          },
          {
            "type": "string",
            "required": true,
            "name": "cam_username",
            "in": "query",
            "description": "Username of the camera"
          },
          {
            "type": "string",
            "required": true,
            "name": "cam_password",
            "in": "query",
            "description": "Password of the camera"
          },
          {
            "type": "string",
            "required": true,
            "name": "external_url",
            "in": "query",
            "description": "External URL, for example http://110.39.130.42:8040 "
          },
          {
            "type": "string",
            "required": true,
            "name": "jpg_url",
            "in": "query",
            "description": "JPG URL, for example ISAPI/Streaming/channels/101/picture?videoResolutionWidth=1920&videoResolutionHeight=1080"
          },
          {
            "type": "string",
            "required": true,
            "name": "vendor_id",
            "in": "query",
            "description": "Vendor id of the camera"
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapshotController.test",
        "description": ""
      }
    },
    "/cameras/port-check": {
      "get": {
        "tags": [
          "Cameras"
        ],
        "summary": "Returns status of the port.",
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": false,
            "name": "address",
            "in": "query",
            "description": "External IP or URL, for example 192.168.1.46"
          },
          {
            "type": "integer",
            "required": false,
            "name": "port",
            "in": "query",
            "description": "HTTP port, for example 8086"
          }
        ],
        "operationId": "EvercamMediaWeb.CameraController.port_check",
        "description": ""
      }
    },
    "/users/exist/{input}": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Check the existence of the user.",
        "responses": {
          "404": {
            "description": "User does not exit"
          },
          "201": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "input",
            "in": "path",
            "description": "Username/email of the user being requested."
          }
        ],
        "operationId": "EvercamMediaWeb.UserController.user_exist",
        "description": ""
      }
    },
    "/snapmails/{id}": {
      "patch": {
        "tags": [
          "Snapmails"
        ],
        "summary": "Update the existing snapmail.",
        "responses": {
          "404": {
            "description": "Snapmail not found"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "The ID of the snapmail being requested."
          },
          {
            "type": "string",
            "required": false,
            "name": "camera_exids",
            "in": "query",
            "description": "Multiple IDs of camera in following format (abc,xyz)."
          },
          {
            "type": "array",
            "required": false,
            "name": "notify_days",
            "items": {
              "type": "string",
              "enum": [
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday",
                "Sunday"
              ]
            },
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "notify_time",
            "in": "query",
            "description": "Notification, for example 14:23"
          },
          {
            "type": "string",
            "required": false,
            "name": "recipients",
            "in": "query",
            "description": "Multiple emails in following format (test@example.com,info@example.com)."
          },
          {
            "type": "string",
            "required": false,
            "name": "subject",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "timezone",
            "in": "query",
            "description": "For example Europe/Dublin"
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapmailController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "Snapmails"
        ],
        "summary": "Returns the requested snapmail details.",
        "responses": {
          "404": {
            "description": "Snapmail not found"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "The ID of the snapmail being requested."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapmailController.show",
        "description": ""
      },
      "delete": {
        "tags": [
          "Snapmails"
        ],
        "summary": "Delete the snapmail",
        "responses": {
          "404": {
            "description": "Snapmail not found"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "The ID of the snapmail being requested."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapmailController.delete",
        "description": ""
      }
    },
    "/vendors": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "Returns all known IP hardware vendors.",
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": false,
            "name": "id",
            "in": "query",
            "description": "The ID of the vendor being requested."
          },
          {
            "type": "string",
            "required": false,
            "name": "name",
            "in": "query",
            "description": "The name of the vendor."
          },
          {
            "type": "string",
            "required": false,
            "name": "mac",
            "in": "query",
            "description": "The mac address of the vendor."
          }
        ],
        "operationId": "EvercamMediaWeb.VendorController.index",
        "description": ""
      }
    },
    "/cameras/{id}/recordings/snapshots/{year}/{month}/{day}": {
      "get": {
        "tags": [
          "Recordings"
        ],
        "summary": "Check availability of recording.",
        "responses": {
          "404": {
            "description": "Camera does not exist"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "year",
            "in": "path",
            "description": "Year, for example 2013"
          },
          {
            "type": "string",
            "required": true,
            "name": "month",
            "in": "path",
            "description": "Month, for example 12"
          },
          {
            "type": "string",
            "required": true,
            "name": "day",
            "in": "path",
            "description": "Day, for example 15"
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapshotController.day",
        "description": ""
      }
    },
    "/cameras/{id}/ptz/nodes": {
      "get": {
        "tags": [
          "Onvif"
        ],
        "summary": "Returns ptz nodes of the given camera.",
        "responses": {
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.ONVIFPTZController.nodes",
        "description": ""
      }
    },
    "/cameras": {
      "post": {
        "tags": [
          "Cameras"
        ],
        "summary": "Creates a new camera owned by the authenticating user.",
        "responses": {
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "name",
            "in": "query",
            "description": "Name of the camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "external_host",
            "in": "query",
            "description": "External IP or URL"
          },
          {
            "type": "integer",
            "required": true,
            "name": "external_http_port",
            "in": "query",
            "description": "External HTTP Port, for example 8080"
          },
          {
            "type": "string",
            "required": false,
            "name": "external_rtsp_port",
            "in": "query",
            "description": "Internal RTSP Port, for example 880."
          },
          {
            "type": "string",
            "required": false,
            "name": "vendor",
            "in": "query",
            "description": "Vendor name, for example hikvision"
          },
          {
            "type": "string",
            "required": false,
            "name": "model",
            "in": "query",
            "description": "Model name of the camera being requested"
          },
          {
            "type": "string",
            "required": false,
            "name": "timezone",
            "in": "query",
            "description": "Timezone, for example \"Europe/Dublin\""
          },
          {
            "type": "string",
            "required": false,
            "name": "mac_address",
            "in": "query",
            "description": "Mac address of the camera being requested"
          },
          {
            "type": "boolean",
            "required": false,
            "name": "is_online",
            "in": "query",
            "description": ""
          },
          {
            "type": "boolean",
            "required": false,
            "name": "discoverable",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "location_lng",
            "in": "query",
            "description": "Longitude, for example 31.422117"
          },
          {
            "type": "string",
            "required": false,
            "name": "location_lat",
            "in": "query",
            "description": "Latitude, for example 73.090051"
          },
          {
            "type": "boolean",
            "required": false,
            "name": "is_public",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "secondary_port",
            "in": "query",
            "description": "Secondary port of the camera being requested"
          },
          {
            "type": "string",
            "required": false,
            "name": "nvr_http_port",
            "in": "query",
            "description": "HTTP port of NVR."
          },
          {
            "type": "string",
            "required": false,
            "name": "nvr_rtsp_port",
            "in": "query",
            "description": "RTSP port of NVR."
          },
          {
            "type": "string",
            "required": false,
            "name": "internal_host",
            "in": "query",
            "description": "Internal IP or URL."
          },
          {
            "type": "string",
            "required": false,
            "name": "internal_http_port",
            "in": "query",
            "description": "Internal HTTP Port, for example 80."
          },
          {
            "type": "string",
            "required": false,
            "name": "internal_rtsp_port",
            "in": "query",
            "description": "Internal RTSP Port, for example 980."
          },
          {
            "type": "string",
            "required": false,
            "name": "cam_username",
            "in": "query",
            "description": "Username of the camera being requested."
          },
          {
            "type": "string",
            "required": false,
            "name": "cam_password",
            "in": "query",
            "description": "Password of the camera being requested."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.CameraController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "Cameras"
        ],
        "summary": "Returns all public and private cameras.",
        "responses": {
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.CameraController.index",
        "description": ""
      }
    },
    "/cameras/archives/pending": {
      "get": {
        "tags": [
          "Archives"
        ],
        "summary": "Returns all pending archives.",
        "responses": {
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.ArchiveController.pending_archives",
        "description": ""
      }
    },
    "/cameras/{id}/apps/cloud-recording": {
      "post": {
        "tags": [
          "Recordings"
        ],
        "summary": "Create new cloud recording of given camera.",
        "responses": {
          "403": {
            "description": "Unauthorized"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "integer",
            "required": true,
            "name": "frequency",
            "in": "query",
            "description": "Frequency, For example 60"
          },
          {
            "type": "integer",
            "required": true,
            "name": "storage_duration",
            "in": "query",
            "description": "Duration, For example 90"
          },
          {
            "type": "string",
            "required": true,
            "name": "status",
            "in": "query",
            "enum": [
              "on-scheduled",
              "off",
              "on",
              "paused"
            ],
            "description": ""
          },
          {
            "type": "string",
            "required": true,
            "name": "schedule",
            "in": "query",
            "description": "For example in json format {\"Wednesday\":[\"8:0-18:0\"],\"Tuesday\":[\"8:0-18:0\"]}"
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.CloudRecordingController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "Recordings"
        ],
        "summary": "Returns the cloud recording of given camera.",
        "responses": {
          "403": {
            "description": "Unauthorized"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.CloudRecordingController.show",
        "description": ""
      }
    },
    "/sdk/nvr/reboot": {
      "post": {
        "tags": [
          "SDK"
        ],
        "summary": "Reboot nvr.",
        "responses": {
          "201": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": true,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester"
          },
          {
            "type": "string",
            "required": true,
            "name": "ip",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": true,
            "name": "port",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": true,
            "name": "user",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": true,
            "name": "password",
            "in": "query",
            "description": ""
          }
        ],
        "operationId": "EvercamMediaWeb.SDKController.nvr_reboot",
        "description": ""
      }
    },
    "/cameras/{id}/nvr/videos": {
      "get": {
        "tags": [
          "Nvr"
        ],
        "summary": "Returns the recording time chunks in an hour.",
        "responses": {
          "404": {
            "description": "Camera does not exist"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": false,
            "name": "starttime",
            "in": "query",
            "description": "Unix timestamp"
          },
          {
            "type": "string",
            "required": false,
            "name": "endtime",
            "in": "query",
            "description": "Unix timestamp"
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.CloudRecordingController.get_recording_times",
        "description": ""
      }
    },
    "/cameras/{id}/ptz/presets": {
      "get": {
        "tags": [
          "Onvif"
        ],
        "summary": "Returns all ptz presets of the given camera.",
        "responses": {
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.ONVIFPTZController.presets",
        "description": ""
      }
    },
    "/cameras/{id}/shares": {
      "post": {
        "tags": [
          "Shares"
        ],
        "summary": "Provides the camera rights to user.",
        "responses": {
          "404": {
            "description": "Camera does not exist"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "201": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "email",
            "in": "query",
            "description": "Share with Evercam registered user"
          },
          {
            "type": "string",
            "required": true,
            "name": "rights",
            "in": "query",
            "enum": [
              "snapshot",
              "minimal+share",
              "full"
            ],
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "message",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.CameraShareController.create",
        "description": ""
      },
      "patch": {
        "tags": [
          "Shares"
        ],
        "summary": "Change the camera rights to user.",
        "responses": {
          "404": {
            "description": "Camera does not exist or Share not found"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "400": {
            "description": "Invalid rights specified in request"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "email",
            "in": "query",
            "description": "Give shared user's email"
          },
          {
            "type": "string",
            "required": true,
            "name": "rights",
            "in": "query",
            "enum": [
              "snapshot",
              "minimal+share",
              "full"
            ],
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.CameraShareController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "Shares"
        ],
        "summary": "Returns the camera permitted users list.",
        "responses": {
          "403": {
            "description": "Forbidden camera access"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.CameraShareController.show",
        "description": ""
      },
      "delete": {
        "tags": [
          "Shares"
        ],
        "summary": "Delete the camera access.",
        "responses": {
          "404": {
            "description": "Camera does not exist or Share not found"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "email",
            "in": "query",
            "description": "Give shared user's email"
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.CameraShareController.delete",
        "description": ""
      }
    },
    "/cameras/{id}/recordings/snapshots": {
      "post": {
        "tags": [
          "Cameras"
        ],
        "summary": "Delete jpegs for a camera.",
        "responses": {
          "401": {
            "description": "Invalid API keys"
          },
          "400": {
            "description": "You can only request deletion in the same hour"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "The ID of the camera being requested."
          },
          {
            "type": "string",
            "required": false,
            "name": "from_date",
            "in": "query",
            "description": "From date for jpeg delete in unix"
          },
          {
            "type": "string",
            "required": false,
            "name": "to_date",
            "in": "query",
            "description": "To date for jpeg delete in unix"
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapshotController.delete",
        "description": ""
      },
      "get": {
        "tags": [
          "Recordings"
        ],
        "summary": "Returns the list of all snapshots currently stored for this camera.",
        "responses": {
          "500": {
            "description": "Internal Server Error"
          },
          "403": {
            "description": "Forbidden camera access"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "from",
            "in": "query",
            "description": "Unix timestamp"
          },
          {
            "type": "string",
            "required": true,
            "name": "to",
            "in": "query",
            "description": "Unix timestamp"
          },
          {
            "type": "integer",
            "required": true,
            "name": "limit",
            "in": "query",
            "description": "",
            "default": 3600
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "",
            "default": 1
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapshotController.index",
        "description": ""
      }
    },
    "/shares/users": {
      "get": {
        "tags": [
          "Shares"
        ],
        "summary": "Returns the shared users.",
        "responses": {
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "camera_id",
            "in": "query",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.CameraShareController.shared_users",
        "description": ""
      }
    },
    "/cameras/{id}/nvr/recordings/stop": {
      "get": {
        "tags": [
          "Nvr"
        ],
        "summary": "Turns off the streaming of the given camera.",
        "responses": {
          "404": {
            "description": "No stream running or Camera does not found"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.CloudRecordingController.stop",
        "description": ""
      }
    },
    "/cameras/{id}/thumbnail": {
      "get": {
        "tags": [
          "Cameras"
        ],
        "summary": "Returns the latest thumbnail jpeg image.",
        "responses": {
          "404": {
            "description": "Camera didn't respond with a jpeg"
          },
          "403": {
            "description": "Forbidden camera access"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "The ID of the camera being requested."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapshotController.thumbnail",
        "description": ""
      }
    },
    "/cameras/{id}/compares": {
      "post": {
        "tags": [
          "Compares"
        ],
        "summary": "Create new compare.",
        "responses": {
          "404": {
            "description": "Camera does not exist"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "201": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "exid",
            "in": "query",
            "description": "Unique identifier for the compare."
          },
          {
            "type": "string",
            "required": true,
            "name": "name",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": true,
            "name": "before_date",
            "in": "query",
            "description": "Unix timestamp"
          },
          {
            "type": "string",
            "required": true,
            "name": "before_image",
            "in": "query",
            "description": "Before image in base64 format."
          },
          {
            "type": "string",
            "required": true,
            "name": "after_date",
            "in": "query",
            "description": "Unix timestamp"
          },
          {
            "type": "string",
            "required": true,
            "name": "after_image",
            "in": "query",
            "description": "After image in base64 format."
          },
          {
            "type": "string",
            "required": true,
            "name": "embed",
            "in": "query",
            "description": ""
          },
          {
            "type": "boolean",
            "required": true,
            "name": "create_animation",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.CompareController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "Compares"
        ],
        "summary": "Returns all compares of the requested camera.",
        "responses": {
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the camera."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.CompareController.index",
        "description": ""
      }
    },
    "/cameras/{id}/archives/{archive_id}/play": {
      "get": {
        "tags": [
          "Archives"
        ],
        "summary": "Play the requested archive of the given camera.",
        "responses": {
          "404": {
            "description": "Camera does not exist or Archive does not found"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "archive_id",
            "in": "path",
            "description": "Unique identifier for archive."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.ArchiveController.play",
        "description": ""
      }
    },
    "/vendors/{id}": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "Returns available information for the specified vendor.",
        "responses": {
          "404": {
            "description": "Not found"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "The ID of the vendor being requested."
          }
        ],
        "operationId": "EvercamMediaWeb.VendorController.show",
        "description": ""
      }
    },
    "/cameras/{id}/nvr/recordings/{year}/{month}/days": {
      "get": {
        "tags": [
          "Nvr"
        ],
        "summary": "Returns recorded days on nvr in a given month.",
        "responses": {
          "404": {
            "description": "No recordings found or Camera does not found"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "year",
            "in": "path",
            "description": "Year, for example 2013"
          },
          {
            "type": "string",
            "required": true,
            "name": "month",
            "in": "path",
            "description": "Month, for example 10"
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.CloudRecordingController.nvr_days",
        "description": ""
      }
    },
    "/cameras/{id}/recordings/snapshots/{year}/{month}/{day}/{hour}": {
      "get": {
        "tags": [
          "Recordings"
        ],
        "summary": "Returns the hourly snapshots.",
        "responses": {
          "404": {
            "description": "Camera does not exist"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "year",
            "in": "path",
            "description": "Year, for example 2013"
          },
          {
            "type": "string",
            "required": true,
            "name": "month",
            "in": "path",
            "description": "Month, for example 12"
          },
          {
            "type": "string",
            "required": true,
            "name": "day",
            "in": "path",
            "description": "Day, for example 10"
          },
          {
            "type": "string",
            "required": true,
            "name": "hour",
            "in": "path",
            "description": "Hour, for example 13"
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapshotController.hour",
        "description": ""
      }
    },
    "/cameras/{id}/nvr/recordings/{year}/{month}/{day}/hours": {
      "get": {
        "tags": [
          "Nvr"
        ],
        "summary": "Returns recorded hours on nvr in a given day.",
        "responses": {
          "404": {
            "description": "No recordings found or Camera does not found"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "year",
            "in": "path",
            "description": "Year, for example 2013"
          },
          {
            "type": "string",
            "required": true,
            "name": "month",
            "in": "path",
            "description": "Month, for example 10"
          },
          {
            "type": "string",
            "required": true,
            "name": "day",
            "in": "path",
            "description": "Day, for example 24"
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.CloudRecordingController.nvr_hours",
        "description": ""
      }
    },
    "/cameras/{id}/ptz/configurations": {
      "get": {
        "tags": [
          "Onvif"
        ],
        "summary": "Returns ptz configurations of the given camera.",
        "responses": {
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.ONVIFPTZController.configurations",
        "description": ""
      }
    },
    "/cameras/{id}/compares/{compare_id}": {
      "get": {
        "tags": [
          "Compares"
        ],
        "summary": "Returns the single compare.",
        "responses": {
          "404": {
            "description": "Camera does not exist or Compare archive not found."
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "compare_id",
            "in": "path",
            "description": "The ID of the compare being requested."
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the camera."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.CompareController.show",
        "description": ""
      },
      "delete": {
        "tags": [
          "Compares"
        ],
        "summary": "Delete the compare.",
        "responses": {
          "404": {
            "description": "Camera does not exist or Compare archive not found."
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "compare_id",
            "in": "path",
            "description": "The ID of the compare being requested."
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the camera."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.CompareController.delete",
        "description": ""
      }
    },
    "/models": {
      "get": {
        "tags": [
          "Models"
        ],
        "summary": "Returns set of known models for a supported camera vendor.",
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": false,
            "name": "vendor_id",
            "in": "query",
            "description": "Unique identifier for the vendor."
          },
          {
            "type": "string",
            "required": false,
            "name": "name",
            "in": "query",
            "description": "The name of the model."
          },
          {
            "type": "string",
            "required": false,
            "name": "limit",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "page",
            "in": "query",
            "description": ""
          }
        ],
        "operationId": "EvercamMediaWeb.VendorModelController.index",
        "description": ""
      }
    },
    "/users/{id}": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Updates full or partial data on your existing user account.",
        "responses": {
          "400": {
            "description": "Invalid token | email or password has already been taken"
          },
          "201": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Username/email of the existing user."
          },
          {
            "type": "string",
            "required": false,
            "name": "firstname",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "lastname",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "username",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "telegram_username",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.UserController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns the single user's profile details.",
        "responses": {
          "404": {
            "description": "User does not exist"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Username/email of the existing user."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.UserController.get",
        "description": ""
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete your account, any cameras you own and all stored media.",
        "responses": {
          "404": {
            "description": "User does not exist"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Username/email of the existing user."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.UserController.delete",
        "description": ""
      }
    },
    "/cameras/{id}/recordings/snapshots/{timestamp}/nearest": {
      "get": {
        "tags": [
          "Recordings"
        ],
        "summary": "Returns the nearest snapshot image in base64 format.",
        "responses": {
          "403": {
            "description": "Forbidden camera access"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "timestamp",
            "in": "path",
            "description": "**Can be either unix or ISO. e.g (1479780886 or 2016-11-22T02:14:46.000Z)**"
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapshotController.nearest",
        "description": "**Returns the snapshot nearest to a given timestamp (within that hour). It does not check outside of the specified hour.**"
      }
    },
    "/cameras/{id}/recordings/snapshots/{timestamp}": {
      "get": {
        "tags": [
          "Recordings"
        ],
        "summary": "Returns the jpeg image of given timestamp.",
        "responses": {
          "404": {
            "description": "Snapshot not found"
          },
          "403": {
            "description": "Forbidden"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "timestamp",
            "in": "path",
            "description": "**Can be either unix or ISO. e.g (1479780886 or 2016-11-22T02:14:46.000Z)**"
          },
          {
            "type": "string",
            "required": true,
            "name": "notes",
            "in": "query",
            "enum": [
              "Evercam Proxy",
              "Evercam Thumbnail",
              "Evercam Timelapse",
              "Evercam SnapMail",
              "Others"
            ],
            "description": "\n            - Evercam Proxy = Recording\n            - Evercam Thumbnail = Thumbnail\n            - Evercam Timelapse = Timelapse\n            - Evercam SnapMail = SnapMail\n            - Others = Archives"
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          },
          {
            "type": "boolean",
            "required": true,
            "name": "view",
            "in": "query",
            "description": ""
          }
        ],
        "operationId": "EvercamMediaWeb.SnapshotController.show",
        "description": ""
      }
    },
    "/public/cameras": {
      "get": {
        "tags": [
          "Cameras"
        ],
        "summary": "Returns all public cameras list.",
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": false,
            "name": "is_near_to",
            "in": "query",
            "description": "Longitude,Latitude for example 31.4208475,73.0895894"
          },
          {
            "type": "string",
            "required": false,
            "name": "within_distance",
            "in": "query",
            "description": "Within distance, for example 9.5"
          },
          {
            "type": "string",
            "required": false,
            "name": "limit",
            "in": "query",
            "description": "Limit of records, for example 10"
          },
          {
            "type": "string",
            "required": false,
            "name": "offset",
            "in": "query",
            "description": "Offset, for example 15"
          }
        ],
        "operationId": "EvercamMediaWeb.PublicController.index",
        "description": ""
      }
    },
    "/cameras/{id}/live/snapshot": {
      "get": {
        "tags": [
          "Cameras"
        ],
        "summary": "Returns the latest jpeg image from live camera.",
        "responses": {
          "504": {
            "description": "Camera does not respond with a jpeg"
          },
          "403": {
            "description": "Forbidden camera access"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "The ID of the camera being requested."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapshotController.live",
        "description": ""
      }
    },
    "/cameras/{id}/nvr/stream/vhinfo": {
      "get": {
        "tags": [
          "Nvr"
        ],
        "summary": "Returns all VH information of NVR.",
        "responses": {
          "403": {
            "description": "Unauthorized"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.NVRController.get_vh_info",
        "description": ""
      }
    },
    "/cameras/{id}/ptz/home/set": {
      "post": {
        "tags": [
          "Onvif"
        ],
        "summary": "Set ptz home of the given camera.",
        "responses": {
          "401": {
            "description": "Invalid API keys"
          },
          "201": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.ONVIFPTZController.sethome",
        "description": ""
      }
    },
    "/cameras/{id}/logs": {
      "get": {
        "tags": [
          "Cameras"
        ],
        "summary": "Returns the logs.",
        "responses": {
          "404": {
            "description": "Camera didn't found"
          },
          "403": {
            "description": "Forbidden camera access"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "The ID of the camera being requested."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.LogController.show",
        "description": ""
      }
    },
    "/cameras/{id}/recordings/snapshots/{year}/{month}/days": {
      "get": {
        "tags": [
          "Recordings"
        ],
        "summary": "Returns all recorded days in a month.",
        "responses": {
          "404": {
            "description": "Camera does not exist"
          },
          "403": {
            "description": "Forbidden camera access"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "year",
            "in": "path",
            "description": "Year, for example 2013"
          },
          {
            "type": "string",
            "required": true,
            "name": "month",
            "in": "path",
            "description": "Month, for example 12"
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapshotController.days",
        "description": ""
      }
    },
    "/cameras/{id}/shares/requests": {
      "patch": {
        "tags": [
          "Shares"
        ],
        "summary": "Update the pending share request of given email.",
        "responses": {
          "404": {
            "description": "Camera does not found or Share request not found"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": false,
            "name": "email",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "rights",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.CameraShareRequestController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "Shares"
        ],
        "summary": "Returns share requests of given camera.",
        "responses": {
          "404": {
            "description": "Camera does not found"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "status",
            "in": "query",
            "enum": [
              "pending",
              "cancelled",
              "used"
            ],
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.CameraShareRequestController.show",
        "description": ""
      },
      "delete": {
        "tags": [
          "Shares"
        ],
        "summary": "Cancel the pending share request of given email.",
        "responses": {
          "404": {
            "description": "Camera does not found or Share request not found"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": false,
            "name": "email",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "key",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.CameraShareRequestController.cancel",
        "description": ""
      }
    },
    "/snapmails/{id}/unsubscribe/{email}": {
      "patch": {
        "tags": [
          "Snapmails"
        ],
        "summary": "Unsubscribe the snapmail of given email.",
        "responses": {
          "404": {
            "description": "Snapmail not found"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "The ID of the snapmail being requested."
          },
          {
            "type": "string",
            "required": true,
            "name": "email",
            "in": "path",
            "description": "Give subscribed email."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapmailController.unsubscribe",
        "description": ""
      }
    },
    "/users/telegram/{id}/credentials": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns API credentials of given telegram user.",
        "responses": {
          "404": {
            "description": "User does not exit"
          },
          "400": {
            "description": "Invalid telegram_username"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Telegram username of the user being requested."
          }
        ],
        "operationId": "EvercamMediaWeb.UserController.credentialstelegram",
        "description": ""
      }
    },
    "/cameras/{id}/nvr/stream/info": {
      "get": {
        "tags": [
          "Nvr"
        ],
        "summary": "Returns all information about NVR.",
        "responses": {
          "403": {
            "description": "Unauthorized"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.NVRController.get_info",
        "description": ""
      }
    },
    "/onvif/v20/{service}/{operation}": {
      "get": {
        "tags": [
          "Onvif"
        ],
        "summary": "Execute the operation of given service.",
        "responses": {
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "service",
            "in": "path",
            "description": ""
          },
          {
            "type": "string",
            "required": true,
            "name": "operation",
            "in": "path",
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.ONVIFController.invoke",
        "description": ""
      }
    },
    "/snapmails": {
      "post": {
        "tags": [
          "Snapmails"
        ],
        "summary": "Create new snapmail.",
        "responses": {
          "404": {
            "description": "Not Found"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "201": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "camera_exids",
            "in": "query",
            "description": "Multiple IDs of camera in following format (abc,xyz)."
          },
          {
            "type": "array",
            "required": true,
            "name": "notify_days",
            "items": {
              "type": "string",
              "enum": [
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday",
                "Sunday"
              ]
            },
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": true,
            "name": "notify_time",
            "in": "query",
            "description": "Notification time, for example 14:23"
          },
          {
            "type": "string",
            "required": true,
            "name": "recipients",
            "in": "query",
            "description": "Multiple emails in following format (test@example.com,info@example.com)."
          },
          {
            "type": "string",
            "required": true,
            "name": "subject",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": true,
            "name": "timezone",
            "in": "query",
            "description": "For example Europe/Dublin"
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapmailController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "Snapmails"
        ],
        "summary": "Returns all snapmails.",
        "responses": {
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapmailController.all",
        "description": ""
      }
    },
    "/cameras/{id}/archives/{archive_id}": {
      "patch": {
        "tags": [
          "Archives"
        ],
        "summary": "Updates full or partial data for an existing archive.",
        "responses": {
          "404": {
            "description": "Camera does not exist"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "archive_id",
            "in": "path",
            "description": "Unique identifier for archive."
          },
          {
            "type": "string",
            "required": false,
            "name": "title",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "status",
            "in": "query",
            "enum": [
              "pending",
              "processing",
              "completed",
              "failed"
            ],
            "description": ""
          },
          {
            "type": "boolean",
            "required": false,
            "name": "public",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.ArchiveController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "Archives"
        ],
        "summary": "Returns the archives Details.",
        "responses": {
          "404": {
            "description": "Camera does not exist or Archive does not found"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "archive_id",
            "in": "path",
            "description": "Unique identifier for archive."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.ArchiveController.show",
        "description": ""
      },
      "delete": {
        "tags": [
          "Archives"
        ],
        "summary": "Delete the archives for given camera.",
        "responses": {
          "404": {
            "description": "Camera does not exist"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "archive_id",
            "in": "path",
            "description": "Unique identifier for archive."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.ArchiveController.delete",
        "description": ""
      }
    },
    "/cameras/{id}/ptz/continuous/zoom/{mode}": {
      "post": {
        "tags": [
          "Onvif"
        ],
        "summary": "Zoom in/out of the camera.",
        "responses": {
          "401": {
            "description": "Invalid API keys"
          },
          "201": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "mode",
            "in": "query",
            "enum": [
              "in",
              "out"
            ],
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.ONVIFPTZController.continuouszoom",
        "description": ""
      }
    },
    "/cameras/{id}/archives": {
      "post": {
        "tags": [
          "Archives"
        ],
        "summary": "Create new archive.",
        "responses": {
          "404": {
            "description": "Camera does not exist"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "400": {
            "description": "Bad Request"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "title",
            "in": "query",
            "description": "Name of the clip."
          },
          {
            "type": "string",
            "required": true,
            "name": "from_date",
            "in": "query",
            "description": "Unix timestamp"
          },
          {
            "type": "string",
            "required": true,
            "name": "to_date",
            "in": "query",
            "description": "Unix timestamp"
          },
          {
            "type": "boolean",
            "required": false,
            "name": "is_nvr_archive",
            "in": "query",
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.ArchiveController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "Archives"
        ],
        "summary": "Returns the archives list of given camera.",
        "responses": {
          "403": {
            "description": "Camera does not exist"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.ArchiveController.index",
        "description": ""
      }
    },
    "/users/{id}/activities": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns the logs of given user.",
        "responses": {
          "404": {
            "description": "User does not exist"
          },
          "401": {
            "description": "Invalid API keys or Unauthorized"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Username/email of the user."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.UserController.user_activities",
        "description": ""
      }
    },
    "/cameras/{id}/ptz/continuous/stop": {
      "get": {
        "tags": [
          "Onvif"
        ],
        "summary": "Stop the ptz of the given camera.",
        "responses": {
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.ONVIFPTZController.stop",
        "description": ""
      }
    },
    "/cameras/{id}/ptz/presets/go/{preset_token}": {
      "post": {
        "tags": [
          "Onvif"
        ],
        "summary": "Go to specific preset of given camera.",
        "responses": {
          "401": {
            "description": "Invalid API keys"
          },
          "201": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "integer",
            "required": true,
            "name": "preset_token",
            "in": "path",
            "description": "Unique token number of the preset."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.ONVIFPTZController.gotopreset",
        "description": ""
      }
    },
    "/cameras/{id}/ptz/continuous/start/{direction}": {
      "post": {
        "tags": [
          "Onvif"
        ],
        "summary": "Move the camera to given direction.",
        "responses": {
          "401": {
            "description": "Invalid API keys"
          },
          "201": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for camera."
          },
          {
            "type": "string",
            "required": true,
            "name": "direction",
            "in": "query",
            "enum": [
              "left",
              "right",
              "up",
              "down"
            ],
            "description": ""
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.ONVIFPTZController.continuousmove",
        "description": ""
      }
    },
    "/cameras/{id}/recordings/snapshots/latest": {
      "get": {
        "tags": [
          "Recordings"
        ],
        "summary": "Returns the latest snapshot image in base64 format.",
        "responses": {
          "404": {
            "description": "Camera didn't respond with a base64 image "
          },
          "403": {
            "description": "Forbidden camera access"
          },
          "401": {
            "description": "Invalid API keys"
          },
          "200": {
            "description": "Success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the camera."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_id",
            "in": "query",
            "description": "The Evercam API id for the requester."
          },
          {
            "type": "string",
            "required": false,
            "name": "api_key",
            "in": "query",
            "description": "The Evercam API key for the requester."
          }
        ],
        "operationId": "EvercamMediaWeb.SnapshotController.latest",
        "description": ""
      }
    }
  },
  "info": {
    "version": "1.0",
    "title": "Evercam Server"
  },
  "host": "media.evercam.io/v1",
  "definitions": {
    "Vendor": {
      "type": "object",
      "title": "Vendor",
      "properties": {
        "updated_at": {
          "type": "string",
          "format": "timestamp",
          "description": ""
        },
        "name": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "known_macs": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "id": {
          "type": "integer",
          "description": ""
        },
        "exid": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "created_at": {
          "type": "string",
          "format": "timestamp",
          "description": ""
        }
      },
      "description": ""
    },
    "User": {
      "type": "object",
      "title": "User",
      "properties": {
        "vat_number": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "username": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "updated_at": {
          "type": "string",
          "format": "timestamp",
          "description": ""
        },
        "token_expires_at": {
          "type": "string",
          "format": "timestamp",
          "description": ""
        },
        "telegram_username": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "stripe_customer_id": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "reset_token": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "payment_method": {
          "type": "integer",
          "description": ""
        },
        "password": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "lastname": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "is_admin": {
          "type": "boolean",
          "description": "",
          "default": false
        },
        "insight_id": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "id": {
          "type": "integer",
          "description": ""
        },
        "firstname": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "email": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "created_at": {
          "type": "string",
          "format": "timestamp",
          "description": ""
        },
        "country_id": {
          "type": "integer",
          "description": ""
        },
        "billing_id": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "api_key": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "api_id": {
          "type": "string",
          "format": "text",
          "description": ""
        }
      },
      "description": ""
    },
    "Snapmail": {
      "type": "object",
      "title": "Snapmail",
      "properties": {
        "user_id": {
          "type": "integer",
          "description": ""
        },
        "updated_at": {
          "type": "string",
          "format": "timestamp",
          "description": ""
        },
        "timezone": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "subject": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "recipients": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "notify_time": {
          "type": "string",
          "format": "character(255)",
          "description": ""
        },
        "notify_days": {
          "type": "string",
          "format": "character(255)",
          "description": ""
        },
        "message": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "is_public": {
          "type": "boolean",
          "description": "",
          "default": false
        },
        "is_paused": {
          "type": "boolean",
          "description": "",
          "default": false
        },
        "inserted_at": {
          "type": "string",
          "format": "timestamp",
          "description": ""
        },
        "id": {
          "type": "integer",
          "description": ""
        },
        "exid": {
          "type": "string",
          "format": "character(255)",
          "description": ""
        }
      },
      "description": ""
    },
    "Share": {
      "type": "object",
      "title": "Share",
      "properties": {
        "user_id": {
          "type": "integer",
          "description": ""
        },
        "updated_at": {
          "type": "string",
          "format": "timestamp",
          "description": ""
        },
        "sharer_id": {
          "type": "integer",
          "description": ""
        },
        "message": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "kind": {
          "type": "string",
          "format": "character(50)",
          "description": ""
        },
        "id": {
          "type": "integer",
          "description": ""
        },
        "created_at": {
          "type": "string",
          "format": "timestamp",
          "description": ""
        },
        "camera_id": {
          "type": "integer",
          "description": ""
        }
      },
      "description": ""
    },
    "Model": {
      "type": "object",
      "title": "Model",
      "properties": {
        "wifi": {
          "type": "boolean",
          "description": "",
          "default": false
        },
        "vendor_id": {
          "type": "integer",
          "format": "text",
          "description": ""
        },
        "varifocal": {
          "type": "boolean",
          "description": "",
          "default": false
        },
        "username": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "upnp": {
          "type": "boolean",
          "description": "",
          "default": false
        },
        "updated_at": {
          "type": "string",
          "format": "timestamp",
          "description": ""
        },
        "shape": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "sd_card": {
          "type": "boolean",
          "description": "",
          "default": false
        },
        "resolution": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "ptz": {
          "type": "boolean",
          "description": "",
          "default": false
        },
        "psia": {
          "type": "boolean",
          "description": "",
          "default": false
        },
        "poe": {
          "type": "boolean",
          "description": "",
          "default": false
        },
        "password": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "onvif": {
          "type": "boolean",
          "description": "",
          "default": false
        },
        "official_url": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "name": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "more_info": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "mjpg_url": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "jpg_url": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "infrared": {
          "type": "boolean",
          "description": "",
          "default": false
        },
        "id": {
          "type": "integer",
          "description": ""
        },
        "h264_url": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "exid": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "discontinued": {
          "type": "boolean",
          "description": "",
          "default": false
        },
        "created_at": {
          "type": "string",
          "format": "timestamp",
          "description": ""
        },
        "config": {
          "type": "string",
          "format": "json",
          "description": ""
        },
        "channel": {
          "type": "integer",
          "description": ""
        },
        "audio_io": {
          "type": "boolean",
          "description": "",
          "default": false
        }
      },
      "description": ""
    },
    "Compare": {
      "type": "object",
      "title": "Compare",
      "properties": {
        "updated_at": {
          "type": "string",
          "format": "timestamp",
          "description": ""
        },
        "status": {
          "type": "integer",
          "description": ""
        },
        "requested_by": {
          "type": "integer",
          "description": ""
        },
        "name": {
          "type": "string",
          "format": "character(255)",
          "description": ""
        },
        "inserted_at": {
          "type": "string",
          "format": "timestamp",
          "description": ""
        },
        "id": {
          "type": "integer",
          "description": ""
        },
        "exid": {
          "type": "string",
          "format": "character(255)",
          "description": ""
        },
        "embed_code": {
          "type": "string",
          "format": "character(255)",
          "description": ""
        },
        "create_animation": {
          "type": "boolean",
          "description": "",
          "default": false
        },
        "camera_id": {
          "type": "integer",
          "description": ""
        },
        "before_date": {
          "type": "string",
          "format": "timestamp",
          "description": ""
        },
        "after_date": {
          "type": "string",
          "format": "timestamp",
          "description": ""
        }
      },
      "description": ""
    },
    "Camera": {
      "type": "object",
      "title": "Camera",
      "properties": {
        "timezone": {
          "type": "string",
          "format": "text",
          "example": "Europe/Dublin",
          "description": ""
        },
        "thumbnail_url": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "owner_id": {
          "type": "integer",
          "description": ""
        },
        "model_id": {
          "type": "integer",
          "description": ""
        },
        "mac_address": {
          "type": "string",
          "format": "macaddr",
          "description": ""
        },
        "location": {
          "type": "string",
          "format": "geography(Point,4326)",
          "description": ""
        },
        "is_public": {
          "type": "boolean",
          "description": ""
        },
        "is_online_email_owner_notification": {
          "type": "boolean",
          "description": ""
        },
        "is_online": {
          "type": "boolean",
          "description": ""
        },
        "id": {
          "type": "integer",
          "description": ""
        },
        "exid": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "discoverable": {
          "type": "boolean",
          "description": "",
          "default": false
        },
        "config": {
          "type": "string",
          "format": "json",
          "description": ""
        },
        "alert_emails": {
          "type": "string",
          "format": "text",
          "description": ""
        }
      },
      "description": ""
    },
    "Archive": {
      "type": "object",
      "title": "Archive",
      "properties": {
        "url": {
          "type": "string",
          "format": "character(255)",
          "description": ""
        },
        "to_date": {
          "type": "string",
          "format": "timestamp",
          "description": ""
        },
        "title": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "status": {
          "type": "integer",
          "description": ""
        },
        "requested_by": {
          "type": "integer",
          "description": ""
        },
        "public": {
          "type": "boolean",
          "description": ""
        },
        "id": {
          "type": "integer",
          "description": ""
        },
        "from_date": {
          "type": "string",
          "format": "timestamp",
          "description": ""
        },
        "frames": {
          "type": "integer",
          "description": ""
        },
        "file_name": {
          "type": "string",
          "format": "character(255)",
          "description": ""
        },
        "exid": {
          "type": "string",
          "format": "text",
          "description": ""
        },
        "embed_time": {
          "type": "boolean",
          "description": ""
        },
        "created_at": {
          "type": "string",
          "format": "timestamp",
          "description": ""
        },
        "camera_id": {
          "type": "integer",
          "description": ""
        }
      },
      "description": ""
    }
  }
}